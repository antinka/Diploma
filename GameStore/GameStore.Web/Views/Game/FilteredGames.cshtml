@using System.Threading
@using GameStore.Web.App_LocalResources
@model GameStore.Web.ViewModels.FilterViewModel
@using (Html.BeginForm("FilteredGames", "Game", FormMethod.Get, null))
{

    <div class="form-group">
        @Html.LabelFor(model => model.PageSize, htmlAttributes: new { @class = "control-label col-sm-3" })

        <div class="col-sm-2">
            @Html.EnumDropDownListFor(model => model.PageSize, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PageSize, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <br />
    if (User != null && User.IsInRole("Manager"))
    {
        <p>
            @Html.ActionLink(GlobalRes.Create, "New", "Game")
        </p>
    }
    <div class="row">
        @foreach (var item in Model.Games)
        {
            <div class="col-md-6">
                <div id="image">
                    <a href=@Url.Action("GetGame", "Game", new {gamekey = item.Key})>
                        <h3>@item.Name</h3>
                    </a>

                    <p class="price">@GlobalRes.Price: @item.Price</p>
                    <img class="img-thumbnail" src="@Url.Action("AsyncGetImage", "Game", new { gamekey = item.Key })" alt="@item.Name"/>
                    <div id="hover">
                        <p>
                            <ul>
                                @GlobalRes.Genres:
                                @if (item.Genres.Any())
                                {
                                    foreach (var i in item.Genres)
                                    {
                                        <li>
                                            @i.Name
                                        </li>
                                    }
                                }
                                else
                                {
                                    if (Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName.ToUpperInvariant() == "EN")
                                    {
                                        <li>Other</li>
                                    }
                                    else
                                    {
                                        <li>Другие</li>
                                    }
                                }
                            </ul>
                        </p>

                        <p>
                            <ul>
                                @GlobalRes.PlatformTypes:

                                @foreach (var i in item.PlatformTypes)
                                {
                                    <li>
                                        @i.Name
                                    </li>
                                }
                            </ul>
                        </p>

                        <p>

                            @GlobalRes.Publisher:
                            @Html.DisplayFor(modelItem => item.Publisher.Name)
                        </p>
                    </div>
                </div>
                <p>
                    @if (User != null && User.IsInRole("Manager"))
                    {
                        @Html.ActionLink(GlobalRes.Update, "Update", new { gamekey = item.Key })
                        <br />
                        @Ajax.ActionLink(GlobalRes.Remove, "Remove", new { gameId = item.Id }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = @item.Key })
                    }
                </p>
            </div>
        }
    </div>
    <br />
    <br />
    <div style="text-align: center">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.PagingInfo.TotalPages > 9)
                {
                    int s = 1, e = 9;
                    if (Model.PagingInfo.CurrentPage > 5)
                    {
                        s = Model.PagingInfo.CurrentPage - 4;

                        if (Model.PagingInfo.CurrentPage + 4 < Model.PagingInfo.TotalPages)
                        {
                            e = Model.PagingInfo.CurrentPage + 4;
                        }
                        else
                        {
                            e = Model.PagingInfo.TotalPages;
                            s = e - 8;
                        }

                        <input id="page" type="submit" value=1 name="page" class="btn btn-default" />
                        <span>....</span>
                    }

                    for (int i = s; i <= e; i++)
                    {
                        if (Model.PagingInfo.CurrentPage == i)
                        {
                            <input disabled="disabled" type="button" value=@i class="btn btn-default" style="background-color: #A9A9A9" />
                        }
                        else
                        {
                            <input id="page" type="submit" value=@i name="page" class="btn btn-default" />
                        }
                    }

                    if (s + 4 < Model.PagingInfo.TotalPages - 4)
                    {
                        <span>....</span>
                        <input id="page" type="submit" value=@Model.PagingInfo.TotalPages name="page" class="btn btn-default" />
                    }
                }
                else
                {
                    for (int i = 1; i <= Model.PagingInfo.TotalPages; i++)
                    {
                        if (Model.PagingInfo.CurrentPage != i)
                        {
                            <input id="page" type="submit" value=@i name="page" class="btn btn-default" />
                        }
                        else
                        {
                            <input disabled="disabled" type="button" value=@i class="btn btn-default" style="background-color: #A9A9A9" />
                        }
                    }
                }
            </div>
        </div>
    </div>

    @section rightSidebar
        {
        @Html.Partial("GamesFilters", Model)
    }

}