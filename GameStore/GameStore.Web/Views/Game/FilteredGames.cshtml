@using GameStore.Web.App_LocalResources
@model GameStore.Web.ViewModels.FilterViewModel
@using (Html.BeginForm("FilteredGames", "Game", FormMethod.Get, new { id = "filteredGames" }))
{
    <div class="row">
        <div class="col-xs-6 col-md-4">
            @Html.Partial("GamesFilters", Model)
        </div>
        <div class="col-xs-6 col-md-4">

            <p>
                @Html.ActionLink(GlobalRes.Create, "New", "Game")
            </p>
            <div class="form-group">
                @Html.LabelFor(model => model.SortType, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.SortType, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SortType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PageSize, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.PageSize, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PageSize, "", new { @class = "text-danger" })
                </div>
            </div>
            <table class="table" id ="notDisabled">
                <tr>
                    <th>
                        @Html.HiddenFor(model => model.Games.First().Key)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Games.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Games.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Games.First().Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Games.First().UnitsInStock)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Games.First().Discountinues)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Games.First().Publisher.Name)
                    </th>
                    <th></th>
                    <th></th>
                </tr>
                @if (Model.Games.First().Key != null)
                { 
                foreach (var item in Model.Games)
                 {
                     <tr>
                         <td id="@item.Key">
                             @Html.HiddenFor(modelItem => item.Key)
                         </td>
                         <td>
                             @Html.DisplayFor(modelItem => item.Name)
                         </td>
                         <td>
                             @Html.DisplayFor(modelItem => item.Description)
                         </td>
                         <td>
                             @Html.DisplayFor(modelItem => item.Price)
                         </td>
                         <td>
                             @Html.DisplayFor(modelItem => item.UnitsInStock)
                         </td>
                         <td>
                             @Html.DisplayFor(modelItem => item.Discountinues)
                         </td>
                         <td>
                             @Html.DisplayFor(modelItem => item.Publisher.Name)
                         </td>
                         <td>
                             @Html.ActionLink(GlobalRes.Details, "GetGame", new { gamekey = item.Key })
                             @Html.ActionLink(GlobalRes.Update, "Update", new { gamekey = item.Key })
                             @Ajax.ActionLink(GlobalRes.Remove, "Remove", new { gameId = item.Id }, new AjaxOptions { HttpMethod = "POST" , UpdateTargetId = @item.Key })

                         </td>
                     </tr>
                 }
                }
            </table>

            <div style="text-align: center" >
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10"  >
                        @for (int i = 1; i <= Model.PagingInfo.TotalPages; i++)
                        {
                            if (Model.PagingInfo.CurrentPage != i)
                            {
                                <input disabled="disabled" id ="page" type="submit" value=@i name="page" class="btn btn-default" />
                            }
                            else
                            {
                                <input type="button" value=@i class="btn btn-default" />
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}