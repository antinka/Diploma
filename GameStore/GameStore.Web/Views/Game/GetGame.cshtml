@using System.Threading
@using GameStore.Web.App_LocalResources
@using System.Web.Mvc.Html
@model GameStore.Web.ViewModels.Games.DetailsGameViewModel

@{
    ViewBag.Title = "GetGame";
}
<div>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.IsDelete)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsDelete)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Key)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Key)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UnitsInStock)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UnitsInStock)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Discountinues)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Discountinues)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PlatformTypes)
        </dt>
        <dd>
            <ul>
                @foreach (var i in Model.PlatformTypes)
                {
                    <li>
                        @i.Name
                    </li>
                }
            </ul>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Genres)
        </dt>
        <dd>

            <ul>
                @if (Model.Genres.Any())
                {
                    foreach (var i in Model.Genres)
                    {
                        <li>
                             @i.Name
                        </li>
                    }
                }
                else
                {
                    if (Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName.ToUpperInvariant() == "EN")
                    {
                        <li>Other</li>
                    }
                    else
                    {
                        <li>Другие</li>
                    }
                }
            </ul>
        </dd>
        @{if (Model.PublisherId != null)
            {
                <dt>
                    @Html.DisplayNameFor(model => model.Publisher)
                </dt>
                <dd>
                    <ul>
                        <li>
                            @Html.ActionLink(Model.Publisher.Name, "Get", "Publisher", new { companyName = Model.Publisher.Name }, null)
                        </li>
                    </ul>
                </dd>
            }
            else
            {
                <dt>
                    @Html.DisplayNameFor(model => model.Publisher)
                </dt>
                <dd>
                    <ul>
                        <li>
                            unknown
                        </li>
                    </ul>
                </dd>
            }
        }
    </dl>
</div>

@{
    if (Model.IsDelete == false)
    {
        <p>
            @Html.ActionLink(GlobalRes.Download, "Download", new { gamekey = Model.Key }, new { target = "_blank" })
            @if (Model.UnitsInStock > 0 && User != null && User.Identity.IsAuthenticated)
            {
                @:|
                @Html.ActionLink(GlobalRes.Buy, "AddGameToOrder", "Order", new { gamekey = Model.Key }, null)
            }
            |@Html.ActionLink(GlobalRes.Comment, "GetAllCommentToGame", "Comment", new { gamekey = Model.Key }, null)
        </p>
    }
    else
    {
        @Html.ActionLink(GlobalRes.Comment, "GetAllCommentToGame", "Comment", new { gamekey = Model.Key }, null)
    }
}